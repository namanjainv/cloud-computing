
Name: Vimal Kumar, Naman Jain
Last 4 digits ID: 0153
Computer IP address:
CSE 6331, Cloud Computing					


Quiz Q6, 3.30, Summer 2019   (c) DL, UTA, 2019


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     _________________

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4. Using the cloud services provider, all functionality possible should be implemented on that provider.
    (Of course, displaying web pages through a browser and the user interface is "local")
    The cloud service provider is AWS.

 4+ In order to give as many people the opportunity to demo in the last few minutes, you may only demo ONE Question in the
    last 5 minutes of the quiz time or for the few minutes afterward. 

 4++ Please open one window for the load testing software and another (or more) for the interface to the cloud based application.
  
Show and submit code, when each part is complete, raise your hand and then show us:

 5. You will run a "load-testing" application to "test" a cloud application.
     Please enter the name of your load-testing application here:
    
     And show it to us running on your computer.

STEP 1: Add a thread (USERS)

STEP 2: Add Sampler HTTP request

STEP 3: INPUT both server and path

STEP 4: Add Listerners (Table and Tree both)

STEP 5: RUN

 6. You have two pictures: a.jpg and b.jpg. You will write a web interface and application, running on AWS, that will return
    (show) a page with your name and student ID at the bottom of the page, at the top you will show "CSE 6331 3:30", and in 
    the middle of that page EITHER picture a or b. You may either alternate showing pictures for EACH request OR show that picture
    based on the time (in seconds) being either even or odd. Show the time when the request is received, and time when response 
    is sent, and the elapsed time immediately below the CSE banner at the top of the page. 

<!DOCTYPE html>
<head>
    <title> Quiz 6 </title>
</head>
<body>
    <h1> CSE 6331 3:30 </h1>
    {% if times %}  
        <p> Start Time: {{ times['start'] }}</p> <br />
        <p> End Time: {{ times['end'] }}</p> <br />
        <p> Elapsed Time: {{ times['elapsed'] }}</p> <br />
        <center>
            {% if times['x'] == 0 %}
                <img src = "{{url_for('static', filename='a.jpg')}}"" alt = "First image">
            {% else %}
                <img src = "{{url_for('static', filename='b.jpg')}}"" alt = "First image">
            {% endif %}
        </center>
    {% endif %}
    <h1> Naman Jain Vimal Kumar </h1>
    <h1> 1001670153 </h1>
</body>

def image_view():
    startTime = datetime.now()
    x = random.randint(0,1)
    endTime = datetime.now()
    elapsedTime = (endTime - startTime).total_seconds()
    print(x)
    return render_template("image.html", times = {
        "start": startTime,
        "end": endTime,
        "elapsed": str(elapsedTime) + " seconds",
        "x": x
    })

 7. Then, using your load test tool, test (simulate) multiple users who are using your cloud application. 
    We will give you a number of users to simulate. 
    Monitor (test) the cloud execution with your load test tool, capture, and explain results. 
    On the web page show us the pages as they are requested by your load test tool execution.

STEP 1: Add a thread (USERS)

STEP 2: Add Sampler HTTP request

STEP 3: INPUT both server and path

STEP 4: Add Listerners (Table and Tree both)

STEP 5: RUN

STEP 6: VISUAL RESULTS can be seen in the tree, table

 8. Bonus (small):
    Show the result web page auto refreshing for each request.

STEP 1: Install chrome extension "Blazemeter"

STEP 2: Record the scene from AWS webpage from your Blazemeter

STEP 3: Edit from Blazemeter and run to see the changes on web chrome

 10. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.
